'use client'

import { useState, useEffect, useRef } from 'react'
import { Card, CardContent } from '@/components/ui/card'
import { Star, ChevronLeft, ChevronRight } from 'lucide-react'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { useRouter } from 'next/navigation'

interface Review {
	text: string
	author: string
	rating: number
}

const reviews: Review[] = [
	{
		text: '–ü—Ä–∏–µ—Ö–∞–ª –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞, —É—Å—Ç—Ä–∞–Ω–∏–ª —Ç–µ—á—å, –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ. –°–ø–∞—Å–∏–±–æ!',
		author: '–ê–Ω–Ω–∞, –ü—Ä–∏–º–æ—Ä—Å–∫–∏–π —Ä-–Ω',
		rating: 5,
	},
	{
		text: '–î—É–º–∞–ª, –≤—Å—ë ‚Äî —Å–≥–æ—Ä–µ–ª –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä, –Ω–æ –æ–±–æ—à–ª–æ—Å—å –∑–∞–º–µ–Ω–æ–π —Ä–µ–ª–µ. –ë—ã—Å—Ç—Ä–æ, —á–µ—Å—Ç–Ω–æ, –ø—Ä–∏—è—Ç–Ω–æ.',
		author: '–í–ª–∞–¥–∏–º–∏—Ä, –ö—É–ø—á–∏–Ω–æ',
		rating: 5,
	},
	{
		text: '–•–æ—Ä–æ—à–µ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ, —Å–¥–µ–ª–∞–ª–∏ –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏. –°–æ—Ö—Ä–∞–Ω—è—é –Ω–æ–º–µ—Ä.',
		author: '–ò—Ä–∏–Ω–∞, –ö–∞–ª–∏–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω',
		rating: 5,
	},
	{
		text: '–í—Å–µ —Ö–æ—Ä–æ—à–æ —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É!',
		author: 'Alesk',
		rating: 5,
	},
	{
		text: '–ú–∞—Å—Ç–µ—Ä –ø—Ä–∏–µ—Ö–∞–ª –º–≥–Ω–æ–≤–µ–Ω–Ω–æ, –¥–µ–Ω—å –≤ –¥–µ–Ω—å, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –ø–æ–∑–¥–Ω–µ–µ –≤—Ä–µ–º—è. –£—Å–ª—É–≥–∞ –æ–∫–∞–∑–∞–Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ. –í–µ–∂–ª–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ. –†–µ–∫–æ–º–µ–Ω–¥—É—é, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞! üëç',
		author: 'Malina',
		rating: 5,
	},
	{
		text: '–û—Ç–ª–∏—á–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞, –ø—Ä–∏–µ—Ö–∞–ª –≤ —Å—Ä–æ—á–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –ø–æ–º–æ–≥, –æ–±—ä—è—Å–Ω–∏–ª, –≤—Å—ë –ø–æ –¥–µ–ª—É —Ä–∞—Å—Å–∫–∞–∑–∞–ª –Ω–∞–º –æ –Ω–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º–µ –≤ –∫–æ—Ñ–µ–π–Ω–µ! –°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ! –°–æ–≤–µ—Ç—É—é –ê–Ω–¥—Ä–µ—è, –∫–∞–∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ )',
		author: '–Æ–ª—è –ñ–∏–≤–æ–ª—É–ø',
		rating: 5,
	},
	{
		text: '–°–ª–æ–º–∞–ª–∞—Å—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞, –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∞—Å—å –æ –≤—Å—Ç—Ä–µ—á–µ –≤ —ç—Ç–æ—Ç –∂–µ –¥–µ–Ω—å, –º–∞—Å—Ç–µ—Ä –ø—Ä–∏–µ—Ö–∞–ª –±–µ–∑ –æ–ø–æ–∑–¥–∞–Ω–∏–π –∏ –∑–∞ –ø–æ–ª—á–∞—Å–∞ –ø—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞ –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∞ —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –Ω–∞ —Ä–∞–±–æ—Ç—É –∏ –¥–µ—Ç–∞–ª—å, –≤—Å–µ —Å—É–ø–µ—Ä)',
		author: '–ê–Ω–Ω–∞ –î–µ–º—á–µ–Ω–∫–æ',
		rating: 5,
	},
	{
		text: '–û–±—Ä–∞—Ç–∏–ª–∞—Å—å —Å –ø—Ä–æ–±–ª–µ–º–æ–π –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â–µ–π –º–æ—Ä–æ–∑–∏–ª—å–Ω–æ–π –∫–∞–º–µ—Ä—ã –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ. –ê–Ω–¥—Ä–µ–π —Å–º–æ–≥ –ø—Ä–∏–µ—Ö–∞—Ç—å –≤ —Ç–æ—Ç –∂–µ –¥–µ–Ω—å –∏ –±—ã—Å—Ç—Ä–æ —É—Å—Ç—Ä–∞–Ω–∏–ª –ø–æ–ª–æ–º–∫—É. –Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ, —Ç–∞–∫ —á—Ç–æ —Å–æ–≤–µ—Ç—É—é –¥–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ )',
		author: '–î–∞—Ä—å—è',
		rating: 5,
	},
	{
		text: '–ü–æ–∫—É–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–ª –ø–æ –≤—Å–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º –º–µ–Ω—è –≤–æ–ø—Ä–æ—Å–∞–º, –±–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ!!!',
		author: '–í–∏—Ç–∞–ª–∏–π –û–ª–µ–≥–æ–≤–∏—á',
		rating: 5,
	},
	{
		text: '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –º–∞—Å—Ç–µ—Ä! –ü—Ä–∏–µ—Ö–∞–ª –≤ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è, –Ω–∞—à–µ–ª –ø—Ä–æ–±–ª–µ–º—É –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ –∏ —É—Å—Ç—Ä–∞–Ω–∏–ª –µ—ë –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ. –¶–µ–Ω–∞ –±—ã–ª–∞ –≤—ã—à–µ, —Ç.–∫. –¥–æ —ç—Ç–æ–≥–æ –ø—Ä–∏–µ–∑–∂–∞–ª –¥—Ä—É–≥–æ–π –º–∞—Å—Ç–µ—Ä, —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ —Ä–∞–∑–±–∏—Ä–∞—è—Å—å –≤ —Ç–µ—Ö–Ω–∏–∫–µ, –Ω–∞–∑–≤–∞–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É. –ü–æ—Å–ª–µ —á–µ–≥–æ —è —Å–ø—Ä–æ—Å–∏–ª–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã —É –ê–Ω–¥—Ä–µ—è, –Ω–µ –∑–Ω–∞—è —Ç–æ—á–Ω–æ–π –ø—Ä–∏—á–∏–Ω—ã –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏‚ùóÔ∏è –ò —Ç–∞–∫ –∫–∞–∫ –¥–µ–ª–æ –±—ã–ª–æ –≤ –¥—Ä—É–≥–æ–º, –≤ –±–æ–ª–µ–µ –≤–∞–∂–Ω–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –∏ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–≤—ã—Å–∏–ª–∞—Å—å. –°–ø–∞—Å–∏–±–æ –µ—â—ë —Ä–∞–∑ –±–æ–ª—å—à–æ–µ! –í—ã –æ—á–µ–Ω—å –≤–µ–∂–ª–∏–≤—ã–π –∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –º—É–∂—á–∏–Ω–∞.',
		author: '–ê–Ω–∞—Å—Ç–∞—Å–∏—è',
		rating: 5,
	},
	{
		text: '–í –Ω–æ—á–∏ —Å–ª–æ–º–∞–ª—Å—è —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫. –ê –¥–Ω—ë–º –Ω–∞–¥–æ —É–µ–∑–∂–∞—Ç—å –Ω–∞ –¥–∞—á—É. –ù–∞–ø–∏—Å–∞–ª–∞ –ê–Ω–¥—Ä–µ—é, –æ—Ç–≤–µ—Ç–∏–ª —Ä–∞–Ω–æ —É—Ç—Ä–æ–º. –ü—Ä–∏–µ—Ö–∞–ª —Ä–∞–Ω—å—à–µ, —á–µ–º –æ–±–µ—â–∞–ª, –æ–≥—Ä–æ–º–Ω–æ–µ –µ–º—É —Å–ø–∞—Å–∏–±–æ –∑–∞ —ç—Ç–æ. –ë—ã—Å—Ç—Ä–æ –≤—ã—è–≤–∏–ª –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å. –ü—ã—Ç–∞–ª—Å—è —Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä, —á—Ç–æ–±—ã —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –º–Ω–µ –¥–µ–Ω—å–≥–∏. –ù–æ –¥–∞–∂–µ –º–Ω–µ, –Ω–µ—Å–≤–µ–¥—É—â–µ–π –≤ —ç—Ç–æ–º –¥–µ–ª–µ, —Å—Ç–∞–ª–æ –ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä –ø—Ä–æ—Å—Ç–æ —Å–¥–æ—Ö. –ê–Ω–¥—Ä–µ–π –ø–æ—Å—Ç–∞–≤–∏–ª –Ω–æ–≤—ã–π. –ë—ã—Å—Ç—Ä–æ, —á–∏—Å—Ç–æ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ. –û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –º–∞—Å—Ç–µ—Ä–∞. üî•',
		author: '–ñ–∞–Ω–Ω–∞',
		rating: 5,
	},
	{
		text: '–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ —É—Å–ª—É–≥–∞ –ø–æ —Ä–µ–º–æ–Ω—Ç—É —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞.',
		author: '–ê–ª—ë–Ω–∞',
		rating: 5,
	},
	{
		text: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –≥—Ä–∞–º–æ—Ç–Ω—ã–π, –≤–µ–∂–ª–∏–≤—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç. –ü—É–Ω–∫—Ç—É–∞–ª–µ–Ω, –ø—Ä–∏–µ—Ö–∞–ª —á—É—Ç—å —Ä–∞–Ω—å—à–µ –æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –†–∞–±–æ—Ç–∞ –ø–æ —Ä–µ–º–æ–Ω—Ç—É —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ –ò–Ω–¥–µ–∑–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ. –°–æ —Å–≤—è–∑—å—é —á–µ—Ä–µ–∑ –ê–≤–∏—Ç–æ –Ω–µ –±—ã–ª–æ –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º, –æ—Ç–≤–µ—á–∞–ª –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É. –î–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Ä–µ–º–æ–Ω—Ç—É —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é.',
		author: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
		rating: 5,
	},
	{
		text: '–û—Ç–ª–∏—á–Ω—ã–π –º–∞—Å—Ç–µ—Ä!!! –í—Å—ë –≤ —Å—Ä–æ–∫, –≤–æ–≤—Ä–µ–º—è –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ. –ë–ª–∞–≥–æ–¥–∞—Ä—é.',
		author: '–ò—Ä–∏–Ω–∞',
		rating: 5,
	},
	{
		text: '–î–µ–ª–æ –º–∞—Å—Ç–µ—Ä–∞ –±–æ–∏—Ç—Å—è! –ò –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—á–µ–≥–æ). –ß—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –æ–ø—ã—Ç, –∑–Ω–∞–Ω–∏–µ –¥–µ–ª–∞. –†–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ.',
		author: '–ï–≤–≥–µ–Ω–∏–π',
		rating: 5,
	},
	{
		text: '–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –ø–µ—Ä–µ—Å—Ç–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å, –º–∞—Å—Ç–µ—Ä –ø—Ä–∏–µ—Ö–∞–ª –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ, –±—ã—Å—Ç—Ä–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª –ø—Ä–æ–±–ª–µ–º—É, –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∑–∞–º—ã–∫–∞–Ω–∏—è –≤—ã—à–µ–ª –∏–∑ —Å—Ç—Ä–æ—è –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä. –ó–∞–º–µ–Ω–∏–ª –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä, –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–∞—á–µ—Å—Ç–≤–æ–º —Ä–∞–±–æ—Ç—ã –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –¥–æ–≤–æ–ª–µ–Ω.',
		author: '–ö–∏—Ä–∏–ª–ª –§–∏–ª–∏–ø–ø–æ–≤',
		rating: 5,
	},
	{
		text: '–û—Å—Ç–∞–ª—Å—è –æ—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω –±—ã—Å—Ç—Ä–æ—Ç–æ–π, –ø–æ—Ä—è–¥–æ—á–Ω–æ—Å—Ç—å—é –º–∞—Å—Ç–µ—Ä–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–æ–º —Ä–µ–º–æ–Ω—Ç–∞ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞. –ü—Ä–∏–µ—Ö–∞–ª –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ —É—Ç—Ä–æ. –í—Å–µ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ.',
		author: 'Basilevs',
		rating: 5,
	},
]

export function ReviewsSection() {
	const [currentIndex, setCurrentIndex] = useState(reviews.length)
	const [slidesToShow, setSlidesToShow] = useState(3)
	const [isTransitioning, setIsTransitioning] = useState(false)
	const [selectedReview, setSelectedReview] = useState<Review | null>(null)
	const [name, setName] = useState('')
	const [phone, setPhone] = useState('')
	const [isSubmitting, setIsSubmitting] = useState(false)
	const [submitStatus, setSubmitStatus] = useState<
		'idle' | 'success' | 'error'
	>('idle')
	const sliderRef = useRef<HTMLDivElement>(null)
	const timeoutRef = useRef<NodeJS.Timeout | null>(null)
	const modalRef = useRef<HTMLDivElement>(null)
	const router = useRouter()

	// –°–æ–∑–¥–∞—ë–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –æ—Ç–∑—ã–≤–æ–≤: –∫–æ–ø–∏–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
	const extendedReviews = [
		...reviews.slice(-slidesToShow),
		...reviews,
		...reviews.slice(0, slidesToShow),
	]

	// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
	const formatPhoneNumber = (value: string): string => {
		// –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
		const phoneNumber = value.replace(/\D/g, '')

		// –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –ø—É—Å—Ç–æ–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
		if (!phoneNumber) return ''

		let cleaned = phoneNumber

		// –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 8, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ 7
		if (cleaned.startsWith('8')) {
			cleaned = '7' + cleaned.slice(1)
		}

		// –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 9 –∏ –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –¥–ª–∏–Ω—É, –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã 7
		if (cleaned.startsWith('9') && cleaned.length >= 10) {
			cleaned = '7' + cleaned
		}

		// –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 7, –æ–±—Ä–µ–∑–∞–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º 7 –≤ –Ω–∞—á–∞–ª–æ
		if (!cleaned.startsWith('7') && cleaned.length > 0) {
			// –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–∞ –ø–µ—Ä–≤–∞—è —Ü–∏—Ñ—Ä–∞ –Ω–µ 7 –∏ –Ω–µ 8 –∏ –Ω–µ 9, —Ç–æ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ 7
			if (cleaned.length === 1 && !['7', '8', '9'].includes(cleaned)) {
				cleaned = '7'
			} else if (cleaned.length > 1) {
				// –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ –¥–æ–±–∞–≤–ª—è–µ–º 7 –≤ –Ω–∞—á–∞–ª–æ
				cleaned = '7' + cleaned
			}
		}

		// –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–æ 11 —Ü–∏—Ñ—Ä (7 + 10 —Ü–∏—Ñ—Ä –Ω–æ–º–µ—Ä–∞)
		if (cleaned.length > 11) {
			cleaned = cleaned.slice(0, 11)
		}

		// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 7
		if (cleaned.startsWith('7')) {
			let formatted = '+'
			for (let i = 0; i < cleaned.length; i++) {
				if (i === 1) formatted += ' '
				if (i === 4) formatted += ' '
				if (i === 7) formatted += '-'
				if (i === 9) formatted += '-'
				formatted += cleaned[i]
			}
			return formatted
		}

		// –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 7, –Ω–æ –µ—Å—Ç—å —Ü–∏—Ñ—Ä—ã, –Ω–∞—á–∏–Ω–∞–µ–º —Å +
		if (cleaned.length > 0) {
			return '+' + cleaned
		}

		return ''
	}

	const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {
		const input = e.target.value
		const formatted = formatPhoneNumber(input)
		setPhone(formatted)
	}

	const getCleanPhoneNumber = (): string => {
		return phone.replace(/\D/g, '')
	}

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–¥–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞
	useEffect(() => {
		const updateSlidesToShow = () => {
			const width = window.innerWidth
			if (width < 640) {
				setSlidesToShow(1)
			} else if (width < 1024) {
				setSlidesToShow(2)
			} else {
				setSlidesToShow(3)
			}
			setCurrentIndex(reviews.length)
		}

		updateSlidesToShow()
		window.addEventListener('resize', updateSlidesToShow)
		return () => window.removeEventListener('resize', updateSlidesToShow)
	}, [])

	// –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
	useEffect(() => {
		const autoSlide = () => {
			if (!isTransitioning && !selectedReview) {
				setIsTransitioning(true)
				setCurrentIndex(prev => prev + 1)
			}
		}

		const interval = setInterval(autoSlide, 3000)

		return () => clearInterval(interval)
	}, [isTransitioning, selectedReview])

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
	useEffect(() => {
		if (isTransitioning) {
			timeoutRef.current = setTimeout(() => {
				if (currentIndex >= reviews.length + slidesToShow) {
					setCurrentIndex(slidesToShow)
					setIsTransitioning(false)
				} else if (currentIndex < slidesToShow) {
					setCurrentIndex(reviews.length)
					setIsTransitioning(false)
				} else {
					setIsTransitioning(false)
				}
			}, 300)
		}

		return () => {
			if (timeoutRef.current) {
				clearTimeout(timeoutRef.current)
			}
		}
	}, [currentIndex, isTransitioning, slidesToShow])

	// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∞ –ø–æ –∫–ª–∞–≤–∏—à–µ Esc
	useEffect(() => {
		const handleEsc = (event: KeyboardEvent) => {
			if (event.key === 'Escape') {
				setSelectedReview(null)
			}
		}
		window.addEventListener('keydown', handleEsc)
		return () => window.removeEventListener('keydown', handleEsc)
	}, [])

	// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ñ–æ–Ω
	const handleBackdropClick = (e: React.MouseEvent) => {
		if (modalRef.current && e.target === modalRef.current) {
			setSelectedReview(null)
		}
	}

	const nextSlide = () => {
		if (isTransitioning) return
		setIsTransitioning(true)
		setCurrentIndex(prev => prev + 1)
	}

	const prevSlide = () => {
		if (isTransitioning) return
		setIsTransitioning(true)
		setCurrentIndex(prev => prev - 1)
	}

	const handleSubmit = async (e: React.FormEvent) => {
		e.preventDefault()
		setIsSubmitting(true)
		setSubmitStatus('idle')

		const cleanPhone = getCleanPhoneNumber()

		// –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
		if (!name.trim()) {
			setSubmitStatus('error')
			setIsSubmitting(false)
			return
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 7 –∏ –∏–º–µ–µ—Ç 11 —Ü–∏—Ñ—Ä
		if (
			!cleanPhone ||
			!cleanPhone.startsWith('7') ||
			cleanPhone.length !== 11
		) {
			setSubmitStatus('error')
			setIsSubmitting(false)
			return
		}

		try {
			const response = await fetch('/api/submit-form', {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify({
					name: name.trim(),
					phone: cleanPhone,
					source: '–§–æ—Ä–º–∞ –≤ –æ—Ç–∑—ã–≤–∞—Ö',
				}),
			})

			let result
			try {
				result = await response.json()
			} catch (jsonError) {
				throw new Error('Invalid response format from server')
			}

			if (response.ok && result.success) {
				setSubmitStatus('success')
				// –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
				setName('')
				setPhone('')
				// –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º
				setTimeout(() => {
					router.push(
						`/success?name=${encodeURIComponent(
							name.trim()
						)}&phone=${encodeURIComponent(cleanPhone)}`
					)
				}, 2000)
			} else {
				setSubmitStatus('error')
			}
		} catch (error) {
			console.error('Form error:', error)
			setSubmitStatus('error')
		} finally {
			setIsSubmitting(false)
		}
	}

	// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–æ 150 —Å–∏–º–≤–æ–ª–æ–≤
	const truncateText = (text: string, maxLength: number) => {
		if (text.length <= maxLength) return text
		return text.slice(0, maxLength) + '...'
	}

	return (
		<section id='reviews' className='py-16 bg-gray-50'>
			<div className='container mx-auto px-4'>
				<h2 className='text-3xl font-bold text-center text-gray-900 mb-12'>
					–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
				</h2>

				<div className='relative'>
					<div className='overflow-hidden'>
						<div
							ref={sliderRef}
							className='flex transition-transform duration-300 ease-in-out'
							style={{
								transform: `translateX(-${
									currentIndex * (100 / slidesToShow)
								}%)`,
								transition: isTransitioning
									? 'transform 300ms ease-in-out'
									: 'none',
							}}
						>
							{extendedReviews.map((review, index) => (
								<div
									key={`${review.author}-${index}`}
									className={`flex-shrink-0 px-3 ${
										slidesToShow === 1
											? 'w-full'
											: slidesToShow === 2
											? 'w-1/2'
											: 'w-1/3'
									}`}
								>
									<Card className='h-full min-h-[200px] flex flex-col'>
										<CardContent className='p-6 flex flex-col flex-grow'>
											<div className='flex mb-4'>
												{[...Array(review.rating)].map((_, i) => (
													<Star
														key={i}
														className='text-yellow-400 fill-current'
														size={20}
													/>
												))}
											</div>
											<p className='text-gray-700 mb-4 flex-grow'>
												"{truncateText(review.text, 150)}"
												{review.text.length > 150 && (
													<button
														className='text-blue-600 hover:underline ml-1 text-sm'
														onClick={() => setSelectedReview(review)}
													>
														–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ
													</button>
												)}
											</p>
											<p className='text-sm text-gray-500 mt-auto'>
												‚Äî {review.author}
											</p>
										</CardContent>
									</Card>
								</div>
							))}
						</div>
					</div>

					<Button
						variant='outline'
						size='icon'
						className='absolute left-0 top-1/2 transform -translate-y-1/2 bg-white shadow-lg rounded-full w-10 h-10'
						onClick={prevSlide}
					>
						<ChevronLeft className='text-gray-600' size={24} />
					</Button>

					<Button
						variant='outline'
						size='icon'
						className='absolute right-0 top-1/2 transform -translate-y-1/2 bg-white shadow-lg rounded-full w-10 h-10'
						onClick={nextSlide}
					>
						<ChevronRight className='text-gray-600' size={24} />
					</Button>

					<div className='flex justify-center mt-6 space-x-2'>
						{reviews.map((_, index) => (
							<button
								key={index}
								className={`w-3 h-3 rounded-full transition-colors ${
									index === (currentIndex - slidesToShow) % reviews.length
										? 'bg-blue-600'
										: 'bg-gray-300'
								}`}
								onClick={() => {
									setIsTransitioning(true)
									setCurrentIndex(index + slidesToShow)
									timeoutRef.current = setTimeout(() => {
										setIsTransitioning(false)
									}, 300)
								}}
							/>
						))}
					</div>
				</div>

				<div className='text-center mt-8'>
					<div className='flex items-center justify-center gap-2 mb-2'>
						{[...Array(5)].map((_, i) => (
							<Star
								key={i}
								className='text-yellow-400 fill-current'
								size={24}
							/>
						))}
						<span className='text-xl font-bold'>4.9</span>
					</div>
					<p className='text-gray-600'>–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –ø–æ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞–º</p>
				</div>

				<div className='text-center mt-4'>
					<Button
						asChild
						className='bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 transition-transform hover:scale-105'
					>
						<a
							href='https://www.avito.ru/user/4b48f908d338b84bb9c523b3359b1811/profile?src=sharing#open-reviews-list'
							target='_blank'
							rel='noopener noreferrer'
						>
							–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –æ—Ç–∑—ã–≤—ã –Ω–∞ –ê–≤–∏—Ç–æ
						</a>
					</Button>
				</div>

				{/* –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Ñ–æ—Ä–º–∞ */}
				<div className='max-w-2xl mx-auto bg-white rounded-xl shadow-sm border border-gray-200 p-6 mt-12'>
					<div className='text-center mb-6'>
						<h3 className='text-2xl font-bold text-gray-900 mb-2'>
							–ü–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ
						</h3>
						<p className='text-gray-600'>
							–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –∏ –Ω–∞—à –º–∞—Å—Ç–µ—Ä –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç
						</p>
					</div>

					<form onSubmit={handleSubmit} className='space-y-4'>
						<div className='grid md:grid-cols-2 gap-4'>
							<Input
								placeholder='–í–∞—à–µ –∏–º—è'
								value={name}
								onChange={e => setName(e.target.value)}
								required
								className='h-12'
							/>
							<Input
								placeholder='+7 999 999-99-99'
								value={phone}
								onChange={handlePhoneChange}
								required
								className='h-12'
							/>
						</div>

						<Button
							type='submit'
							disabled={isSubmitting}
							className='w-full h-12 bg-blue-600 hover:bg-blue-700 text-white font-medium'
						>
							{isSubmitting ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...' : '–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é'}
						</Button>

						{submitStatus === 'success' && (
							<div className='text-center text-green-600 text-sm'>
								–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–∫–æ—Ä–æ –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º.
							</div>
						)}

						{submitStatus === 'error' && (
							<div className='text-center text-red-600 text-sm'>
								–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–º—è –∏ –Ω–æ–º–µ—Ä +7 XXX
								XXX-XX-XX)
							</div>
						)}
					</form>
				</div>

				{selectedReview && (
					<div
						ref={modalRef}
						className='fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50'
						onClick={handleBackdropClick}
					>
						<div className='bg-white rounded-lg p-6 max-w-md w-full mx-4'>
							<h2 className='text-xl font-semibold text-center mb-4'>
								–û—Ç–∑—ã–≤ –æ—Ç {selectedReview.author}
							</h2>
							<div className='flex mb-4 justify-center'>
								{[...Array(selectedReview.rating)].map((_, i) => (
									<Star
										key={i}
										className='text-yellow-400 fill-current'
										size={20}
									/>
								))}
							</div>
							<p className='text-gray-700 mb-6'>"{selectedReview.text}"</p>
							<Button
								onClick={() => setSelectedReview(null)}
								className='w-full bg-blue-600 hover:bg-blue-700'
							>
								–ó–∞–∫—Ä—ã—Ç—å
							</Button>
						</div>
					</div>
				)}
			</div>
		</section>
	)
}
